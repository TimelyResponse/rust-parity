stages:
  - test
  - build
variables:
  GIT_DEPTH: "3"
  SIMPLECOV: "true"
  RUST_BACKTRACE: "1"
  RUSTFLAGS: ""
  CARGOFLAGS: ""
cache:
  key: "$CI_BUILD_STAGE/$CI_BUILD_REF_NAME"
  untracked: true
linux-stable-test:
  stage: test
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
    - master
  script:
    - rustup default stable
    - echo 'Running tests from /tools/test.sh' && echo -en 'gitlab_fold:start:tests'
    - ./tools/test.sh
    - echo -en 'gitlab_fold:end:tests'
  tags:
    - rust
linux-beta-test:
  stage: test
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
    - master
  script:
    - rustup default beta
    - echo 'Running check'
    - cargo check -j $(nproc)
    - echo 'End check'
  tags:
    - rust
linux-nigthly-test:
  stage: test
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
    - master
  script:
    - rustup default beta
    - echo 'Running check'
    - cargo check -j $(nproc)
    - echo 'End check'
  tags:
    - rust
linux-stable:
  stage: build
  image: parity/rust:gitlab-ci
  only:
    - beta
    - tags
    - stable
    - triggers
    - master
  script:
    - git submodule update --init
    - echo 'Building in release mode' && echo -en 'gitlab_fold:start:build.release'
    - rustup default stable
    - cargo build -j $(nproc) -p pbtc --release
    - strip target/release/pbtc
    #- export SHA3=$(target/release/pbtc tools hash target/release/pbtc)
    - md5sum target/release/pbtc > pbtc.md5
    - echo -en 'gitlab_fold:end:build.release'
    - echo 'Running regtests from ./tools/compare-tool/pull-tests-be0eef7.jar' && echo -en 'gitlab_fold:start:regtests'
    - ./tools/regtests.sh
    - echo -en 'gitlab_fold:end:regtests'
    - echo 'Running bench from /benhcer' && echo -en 'gitlab_fold:start:bench'
    - ./tools/bench.sh
    - echo -en 'gitlab_fold:end:bench'
  tags:
    - rust
  artifacts:
    paths:
    - target/release/pbtc
    - target/release/pbtc.md5
    name: "stable-x86_64-unknown-linux-gnu_parity_bitcoin"
docker-build:
  stage: build
  only:
    - master
    - tags
    - triggers
  before_script:
    - docker info
  script:
    - if [ "$CI_BUILD_REF_NAME" == "beta-release" ]; then DOCKER_TAG="latest"; else DOCKER_TAG=$CI_BUILD_REF_NAME; fi
    - docker login -u $Docker_Hub_User_Parity -p $Docker_Hub_Pass_Parity
    - sh tools/docker-build.sh $DOCKER_TAG parity
    - docker logout
  tags:
    - docker
